=== カスタムセクション ===
00
61
73
6D
01
00
00
00
=== カスタムセクション ===

=== 型セクション === 
01: 型セクションを表すバイトコード
25: 後続のバイト列のサイズ 0b00100101 -> 0100101 -> 2^0 + 2^2 + 2^5 = 37バイト
07: 関数の型が7個 00000111 -> 2^0 + 2^1 + 2^2 = 7 (7個ある)
60: 関数タイプ
00: 引数の個数(0)
01: 返り値の数(1)
7F: 返り値の型i32
60: 関数タイプ
01: 引数の個数(1)
7F: 引数の型(i32)
01: 返り値の数(1)
7F: 返り値の型i32
60: 関数タイプ
01: 引数の個数(1)
7F: 引数の型(i32)
00: 返り値の個数(0)
60: 関数タイプ
00: 引数の個数(0)
00: 返り値の個数(0)
60: 関数タイプ
02: 引数の個数(2)
7F: 引数の型(i32)
7F: 引数の型(i32)
01: 返り値の個数(1)
7F: 引数の型(i32)
60: 関数タイプ
03: 引数の個数(3)
7F: 引数の型(i32)
7F: 引数の型(i32)
7F: 引数の型(i32)
01: 返り値の個数(1)
7F: 引数の型(i32)
60: 関数タイプ
03: 引数の個数(3)
7F: 引数の型(i32)
7E: 引数の型(i64)
7F: 引数の型(i32)
01: 返り値の個数(1)
7E: 引数の型(i64)
=== 型セクション === 

=== 関数セクション ===
03: 関数セクションを表す 
18: 0x00011000 -> 0011000 -> 2^3 + 2^4 = 24バイト 
17: 関数が23個あること. 0x00010111 -> 0010111 -> 2^0 + 2^1 + 2^2 + 2^4 = 23個
03: 関数0は type index 3を参照する
01: 関数1は type index 1を参照する
01: 関数2は type index 1を参照する
00: 関数3は type index 0を参照する
04: 関数4は type index 4を参照する
00: 関数5は type index 0を参照する
02: 関数6は type index 2を参照する
00: 関数7は type index 0を参照する
03: 関数8は type index 3を参照する
00: 関数9は type index 0を参照する
00: 関数10は type index 0を参照する
00: 関数11は type index 0を参照する
02: 関数12は type index 2を参照する
02: 関数13は type index 2を参照する
00: 関数14は type index 0を参照する
03: 関数15は type index 3を参照する
01: 関数16は type index 1を参照する
02: 関数17は type index 2を参照する
01: 関数18は type index 1を参照する
00: 関数19は type index 0を参照する
02: 関数20は type index 2を参照する
01: 関数21は type index 1を参照する
00: 関数22は type index 0を参照する
=== 関数セクション ===

=== テーブルセクション ===
04: テーブルセクションを表す
05: 5バイト続く：0x00000101 -> 0000101 -> 2^0 + 2^2 = 5
01: テーブルの数が1個
70: funcref 関数への参照 (どこのアドレスに存在する関数なのかを表として用意される？)
01: フラグ(1は最大サイズが存在することを示す)
01: 最小サイズ1
01: 最大サイズ1
=== テーブルセクション ===

=== メモリーセクション ===
05: メモリセクションを表す
06: 0b00000110 -> 0000110 -> 2^1 + 2^2 = 6バイト
01: メモリの数が1つ
01: メモリのフラグ (1は最大サイズが存在することを示す)
80: 0b10000000 -> 000 0000
02: 0b00000010 -> 000 0010 00000100000000 2^8 = 256
80: 0b10000000 -> 000 0000
02: 0b00000010 -> 000 0010 00000100000000 2^8 = 256
=== メモリーセクション ===

=== グローバルセクション ===
06: グローバルセクションを表すバイトコード
17: 0b00010111 -> 0010111 -> 2^0 + 2^1 + 2^2 + 2^4 = 23バイト
04: グローバル（コンポーネント？変数？）4つあることを示す

7F: i32の型
01: mutable(変更可能)
41: i32.const 後続の定数値をスタックにプッシュ 
80: 0b10000000 -> 0000000
80: 0b10000000 -> 0000000
04: 0b00000100 -> 0000100 -> 1 0000 0000 0000 0000 -> 65536
0B: 終了命令

7F: i32の型
01: mutable(変更可能)
41: i32.const 後続の定数値をスタックにプッシュ 
00: 0
0B: 終了命令

7F: i32の型
01: mutable(変更可能)
41: i32.const 後続の定数値をスタックにプッシュ 
00: 0
0B: 終了命令

7F: i32の型
01: mutable(変更可能)
41: i32.const 後続の定数値をスタックにプッシュ 
00: 0
0B: 終了命令
=== グローバルセクション ===

07
8F
02
0E
06
6D
65
6D
6F
72
79
02
00
11
5F
5F
77
61
73
6D
5F
63
61
6C
6C
5F
63
74
6F
72
73
00
00
04
6D
61
69
6E
00
04
19
5F
5F
69
6E
64
69
72
65
63
74
5F
66
75
6E
63
74
69
6F
6E
5F
74
61
62
6C
65
01
00
10
5F
5F
65
72
72
6E
6F
5F
6C
6F
63
61
74
69
6F
6E
00
05
06
66
66
6C
75
73
68
00
12
15
65
6D
73
63
72
69
70
74
65
6E
5F
73
74
61
63
6B
5F
69
6E
69
74
00
08
19
65
6D
73
63
72
69
70
74
65
6E
5F
73
74
61
63
6B
5F
67
65
74
5F
66
72
65
65
00
09
19
65
6D
73
63
72
69
70
74
65
6E
5F
73
74
61
63
6B
5F
67
65
74
5F
62
61
73
65
00
0A
18
65
6D
73
63
72
69
70
74
65
6E
5F
73
74
61
63
6B
5F
67
65
74
5F
65
6E
64
00
0B
09
73
74
61
63
6B
53
61
76
65
00
13
0C
73
74
61
63
6B
52
65
73
74
6F
72
65
00
14
0A
73
74
61
63
6B
41
6C
6C
6F
63
00
15
1C
65
6D
73
63
72
69
70
74
65
6E
5F
73
74
61
63
6B
5F
67
65
74
5F
63
75
72
72
65
6E
74
00
16
0A
FC
07
17
04
00
10
08
0B
B2
02
01
21
7F
23
00
21
01
41
20
21
02
20
01
20
02
6B
21
03
20
03
20
00
36
02
18
20
03
28
02
18
21
04
02
40
02
40
20
04
0D
00
41
00
21
05
20
03
20
05
36
02
1C
0C
01
0B
20
03
28
02
18
21
06
41
01
21
07
20
06
21
08
20
07
21
09
20
08
20
09
46
21
0A
41
01
21
0B
20
0A
20
0B
71
21
0C
02
40
20
0C
45
0D
00
41
01
21
0D
20
03
20
0D
36
02
1C
0C
01
0B
41
00
21
0E
20
03
20
0E
36
02
14
41
01
21
0F
20
03
20
0F
36
02
10
41
01
21
10
20
03
20
10
36
02
08
02
40
03
40
20
03
28
02
08
21
11
20
03
28
02
18
21
12
20
11
21
13
20
12
21
14
20
13
20
14
4C
21
15
41
01
21
16
20152016 71211720 17450D01 20032802 14211820 03280210 21192018 20196A21 1A200320 1A36020C 20032802 10211B20 03201B36 02142003 28020C21 1C200320 1C360210 20032802 08211D41 01211E20 1D201E6A 211F2003 201F3602 080C000B 000B2003 28021421 20200320 2036021C 0B200328 021C2121 20210F0B 8F010110 7F230021 01411021 02200120 026B2103 20032000 36020C41 00210420 03200436 02080240 03402003 28020C21 05200545 0D012003 28020821 06410A21 07200620 076C2108 20032802 0C210941 0A210A20 09200A6F 210B2008 200B6A21 0C200320 0C360208 20032802 0C210D41 0A210E20 0D200E6D 210F2003 200F3602 0C0C000B 000B2003 28020821 1020100F 0B6E010C 7F230021 00411021 01200020 016B2102 20022400 41002103 20022003 36020C41 0A210420 02200436 02082002 28020821 05200510 01210620 02200636 02042002 28020421 07200710 02210820 02200836 02002002 28020021 09411021 0A200220 0A6A210B 200B2400 20090F0B 0B01017F 10032102 20020F0B 06004180 80040B06 00200024 010B0400 23010B12 00418080 04240341 00410F6A 41707124 020B0700 23002302 6B0B0400 23030B04 0023020B 02000B02 000B0C00 41848004 100C4188 80040B08 00418480 04100D0B 04004101 0B02000B B4020103 7F024020 000D0041 00210102 40410028 028C8004 450D0041 0028028C 80041012 21010B02 40410028 028C8004 450D0041 0028028C 80041012 20017221 010B0240 100E2802 00220045 0D000340 41002102 02402000 28024C41 00480D00 20001010 21020B02 40200028 02142000 28021C46 0D002000 10122001 7221010B 02402002 450D0020 0010110B 20002802 3822000D 000B0B10 0F20010F 0B410021 02024020 0028024C 4100480D 00200010 1021020B 02400240 02402000 28021420 0028021C 460D0020 00410041 00200028 02241105 001A2000 2802140D 00417F21 0120020D 010C020B 02402000 28020422 01200028 02082203 460D0020 00200120 036BAC41 01200028 02281106 001A0B41 00210120 00410036 021C2000 42003703 10200042 00370204 2002450D 010B2000 10110B20 010B0400 23000B06 00200024 000B1201 027F2300 20006B41 70712201 24002001 0B040023 000B